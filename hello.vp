type Integer = int32;

type Ptr = int32**;

type Arr = float[34 * 3];

type Funcs = fn[5]() : int32;

type SuperFuncs = Funcs[10];

type ManyFuncs = fn[3][10][5](int32) : bool;

struct Bar
{
    foo : Foo*;
}

struct Foo
{
    bar : Bar*;
    j, k : float;
    a : int8;
    b : bool;
    c : int32[10];
}

type Reader = fn(void*, uint32) : uint8*;

fn add(a : int32, b : int32, c : float[12]) : int32
{
    return a + b;
}

fn main() : int32
{
    //var x : int32 = cast(int32, true);
    var arr2 : int32[] = {1, 2, 3, 4, 5, 6};
    var arr : int32[4] = {123 * 89, 2, 3, 4};
    var s : uint8[] = "hello everybody";
    var hello : uint8 = '\x65';
    var c : float = 0xf.f;
    var a : int32 = 3;
    var b : int8 = 127; //(34 * 34) / 34;
    a = int32(b) * 34 - 4 + 3 - 3;
    a = 56 * 34 - 4 + 3 - 3;
    var e : int32 = not 1;
    var d : uint64 = 16 >> 1;
    var pi2 : float = 3.141592 * 2;
    var f = 2 * (1987 + 2 / 45 + 34 * 90);
    return 2 * (1987 + 2 / 45 + 34 * 90);
    // 2 * (1987 + 2 / 45 - 34 * 90)
}