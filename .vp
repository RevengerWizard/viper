fn main() : int32
{
    //var pi2 : float = 3 * 2.141592;
    //var pi2d : double = 3.1415926535898 * 2;
    var pi2 = 3.141592 * 2i16;
    //var f = 2 * (1987 + 2 / 45 + 34 * 90);
    //var b : float = int16(float(9));
    //var i = int8(3) + uint64(3);  // error
    //var i2 = uint8(2) + uint16(4);    // error
    //var i3 = 4 + uint32(4);   // error
    var i4 = sizeof(uint64);
    //var b : int64 = cast(int64*, &i4);
    var p : void* = &i4;
    var v : int64 = 21474836489344;
    var w = 9223372036854775807u64;
    //var y : uint64 = 0xffffffffffffffff - 1 + 2;
    var x = int64(2);
    var p = 255e+4;

    //var i8 : int8 = 128;
    //var u8 : uint8 = 256;
    //var i16 : int16 = 32768;
    //var u16 : uint16 = 65536;
    //var i32 : int32 = 2147483648;
    //var u32 : uint32 = 4294967296;
    //var i64 : int64 = 9223372036854775808;
    //var u64 : uint64 = 18446744073709551616;
    var u64 : uint64 = 18446744073709551615;

    var mi8 : int8 = -127 - 1;
    var mi16 : int16 = -32767 - 1;
    var mi32 : int32 = -2147483647 - 1;
    var mi64 : int64 = -9223372036854775807 - 1;

    //var mu64 : uint64 = -18446744073709551615;
    var bu64 : uint64 = ~18446744073709551615;

    var a : int32 = -2147483647 - 1;
    //var a : int32 = (-2147483647 - 1) % -1;
    var a : int32 = 2147483647 + -1;
    //var ashf : uint8 = 1 << 8;
    var i99 = sizeof(int32)*8-1;
    var p8 : uint8 = 127 + 127;
    var p64 : int64 = 9223372036854775807 + 0;

    var b : bool = not not true;

    var p : void*;
    var ip : int32* = p;

    //var x : uint32 = uint32(-1);

    var a = 34i8 - 1;
    var x = ~346+1i32;
}